**TestFairy Dashboard Overview**

The **TestFairy Dashboard** provides a centralized view of all uploaded apps, their activity, and testing insights. It includes key features for managing test sessions, tracking crashes, gathering feedback, and monitoring app performance.

---

## **Dashboard Features**

### **1. General Overview**
- Displays key metrics, including:
  - Number of test sessions
  - Crashes
  - Uploaded apps
  - Testers and users
- Allows direct app uploads via the **New Upload** button
- Provides account and user management options

### **2. Apps Table**
- Lists all apps uploaded to the system with details such as:
  - App Name and Bundle ID
  - Platform (Android, iOS, etc.)
  - Latest version name and number
  - Number of sessions, builds, crashes, and issues
  - Date of last build upload and latest session log
- Clicking on a row opens the **Builds Table** for more details
- The **Link** button directs users to the app’s landing page

### **3. Recent Sessions**
- Displays a list of the most recent test sessions logged in the system

---

## **Navigation Tabs**

### **1. TESTERS Tab**
- Displays testers assigned to different apps
- Allows managing tester permissions and access

### **2. CRASHES Tab**
- Aggregates crash reports by stack trace
- Provides filters for searching crashes by:
  - App
  - Version
  - Timeframe
- Symbolicated crash reports are grouped, while unsymbolicated ones appear separately

### **3. USER FEEDBACK Tab**
- Displays user-submitted feedback via the **Shake-to-Report** feature
- Each feedback entry contains:
  - A screenshot
  - User comments
  - The reporter’s email (may differ from session user)
- Issues can be linked to a bug tracking system by clicking **Create Bug**
- For apps already connected to a bug tracker, issue links/numbers are displayed

---

## **Conclusion**
The TestFairy Dashboard offers a streamlined interface for managing app testing, monitoring stability, and gathering user feedback. By utilizing its features, teams can efficiently track performance issues and ensure a smooth user experience.

